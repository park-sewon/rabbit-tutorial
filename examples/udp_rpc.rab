(** asynchronous channels *)
syscall send(c, v) {
  put [c::store(v)]
}

syscall recv(c) {
  case 
  | [c::store(v)] → return v 
(*  | [c::store(v), ::In(w)] → return w *)
  end
}

(** synchronous rpc channel *)
syscall connect_rpc (c) {
  put [c::req()];
  case 
  | [c::ack(), ::Fr(x)] →
    put [c::conn(), chid(c, x)]; 
    return x
  end
} 

syscall invoke_rpc (cid, f, arg1, arg2) {
  case 
  | [chid(c, cid)] →
    put [c::invoke(f, arg1, arg2), chid(c, cid)]; 
    case [c::returned(v)] → return v
    end
  end	
}

syscall close_rpc (cid){
  case [c::conn(), chid(c, cid)] → put[c::exit()] end
}

syscall accept_rpc (c){
  case [c::req()] → put [c::ack()] end
}

